import { encodeData } from "../encodeData";
import { MulticallContract } from "../MulticallContract";
import ERC20Abi from "../__mocks__/ERC20Abi";
import expectedCallsJson from "../__mocks__/expectedCallsJson";

const ADDRESS = "0xb197f346ec436e1fa89ed8b4ce58696364ab232c";

describe("encodeData", () => {
  it("prepares an array of calls (typically used via batch())", async () => {
    let contract = new MulticallContract("ERC20", ERC20Abi, ADDRESS);
    // @ts-ignore
    let context = contract.balanceOf(ADDRESS);
    // @ts-ignore
    context.totalSupply();

    const [result, calls, data] = encodeData(context);

    expect(result).toEqual({ ERC20: {} });
    expect(JSON.stringify(calls)).toEqual(expectedCallsJson);
    expect(data).toEqual(
      "0x00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000b197f346ec436e1fa89ed8b4ce58696364ab232c0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000002470a08231000000000000000000000000b197f346ec436e1fa89ed8b4ce58696364ab232c00000000000000000000000000000000000000000000000000000000000000000000000000000000b197f346ec436e1fa89ed8b4ce58696364ab232c0000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000000418160ddd00000000000000000000000000000000000000000000000000000000"
    );
  });
});
